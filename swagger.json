{
    "openapi": "3.0.3",
    "info": {
      "title": "API-Documentation",
      "description": "sebuah tugas untuk challange ",
      "termsOfService": "http://swagger.io/terms/",
      "contact": {
        "email": "jevonnetran@gmail.com"
      },
      "license": {
        "name": "Apache 2.0",
        "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
      },
      "version": "1.0.11"
    },
    "servers": [
      {
        "url": "http://localhost:8080/api/v1"
      }
    ],
    "paths": {
      "/users": {
        "get": {
          "summary": "Get all users",
          "responses": {
            "200": {
              "description": "A list of users",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/users"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "summary": "Create a new user",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "User created",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/users"
                  }
                }
              }
            }
          }
        }
      },
      "/users/{userId}": {
        "get": {
          "summary": "Get a user by ID",
          "parameters": [
            {
              "name": "userId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "A single user",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/users"
                  }
                }
              }
            }
          }
        }
      },
      "/account": {
        "get": {
          "summary": "Get all bank accounts",
          "description": "get all account",
          "parameters": [],
          "responses": {
            "200": {
              "description": "get all account data",
              "content": {
                "application/json":{
                  "schema":{
                    "type": "array",
                    "items":{
                      "$ref": "#/components/schemas/BankAccount"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "description": "Create a new bank account",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankAccountInput"
                }
              }
            }
          },
          "parameters": [],
          "responses": {
            "201": {
              "description": "Bank account created",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BankAccount"
                  }
                }
              }
            }
          }
        }

      },
      "/accounts/{accountId}": {
        "get": {
          "description": "Get a bank account by ID",
          "parameters": [
            {
              "name": "accountId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "A single bank account",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BankAccount"
                  }
                }
              }
            }
          }
        }
      },
      "/transactions": {
        "get": {
          "description": "Get all transactions",
          "parameters": [],
          "responses": {
            "200": {
              "description": "A list of transactions",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Transaction"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new transaction",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransactionInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Transaction successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Transaction"
                }
              }
            }
          }
        }
      },
      "/transactions/{transactionId}": {
        "get": {
          "description": "Get a transaction by ID",
          "parameters": [
            {
              "name": "transactionId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "A single transaction",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Transaction"
                  }
                }
              }
            }
          }
        }
      }
    
  },
  "components":{
    "schemas":{
      "users":{
        "type": "object",
        "properties": {
          "id":{
            "type": "integer",
            "example":1
          },
          "name":{
            "type": "string",
            "example":"jevon"
          },
          "email": {
            "type": "string",
            "example": "jevonnetran@gmail.com"
          }
        }
      },
      "BankAccountInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "userId": {
            "type": "integer",
            "example": 1
          },
          "bank_name": {
            "type": "string",
            "example": "Bank of FGA"
          },
          "bank_account_number": {
            "type": "string",
            "example": "123456789"
          },
          "balance": {
            "type": "number",
            "format": "float",
            "example": 1000.00
          }
        },
        "required": ["userId", "bank_name", "bank_account_number", "balance"]
      },
      "BankAccount": {
        "type": "object",
        "properties": {
          "property": {
            "type": "integer"
          }
        }
      },
      "Transaction": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "source_account_id": {
            "type": "integer",
            "example": 1
          },
          "destination_account_id": {
            "type": "integer",
            "example": 2
          },
          "amount": {
            "type": "number",
            "format": "float",
            "example": 100.00
          }
        }
      },
      "TransactionInput": {
        "type": "object",
        "properties": {
          "source_account_id": {
            "type": "integer"
          },
          "destination_account_id": {
            "type": "integer"
          },
          "amount": {
            "type": "number",
            "format": "float"
          }
        },
        "required": ["source_account_id", "destination_account_id", "amount"]
      }
    }
  }
  
}